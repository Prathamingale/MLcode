import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv("Mall_Customers.csv")
df

df.shape

df.info()

df.columns

x = df.iloc[:,[3,4]].values

x

from sklearn.cluster import KMeans

WCSS = []

for i in range(1,11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, random_state = 42)
    kmeans.fit(x)
    WCSS.append(kmeans.inertia_)

plt.plot(range(1,11),WCSS)
plt.title("Elbow Method")
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')

kmeans = KMeans(n_clusters = 5 , init = 'k-means++', max_iter = 300, random_state = 42)
y_kmeans = kmeans.fit_predict(x)

y_kmeans

y_kmeans.shape

plt.scatter(x[y_kmeans==0,0],x[y_kmeans==0,1],s=200,c='red',label='Cluster1')
plt.scatter(x[y_kmeans==1,0],x[y_kmeans==1,1],s=200,c='blue',label='Cluster2')
plt.scatter(x[y_kmeans==2,0],x[y_kmeans==2,1],s=200,c='green',label='Cluster3')
plt.scatter(x[y_kmeans==3,0],x[y_kmeans==3,1],s=200,c='magenta',label='Cluster4')
plt.scatter(x[y_kmeans==4,0],x[y_kmeans==4,1],s=200,c='pink',label='Cluster5')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='yellow',label='Centroid')
plt.title("KMeans Clustering")
plt.xlabel("Annual Income")
plt.ylabel('Spending Score')
plt.legend()
plt.show()

import  matplotlib.cm as cm
from sklearn.metrics import silhouette_samples , silhouette_score 

import numpy as np

range_n_clusters = [2, 3, 4, 5, 6]

for n_clusters in range_n_clusters:

#Initialize the clusterer with n_clusters value and a random generator 
#seed of 10 for reproducibility

    clusterer = KMeans(n_clusters = n_clusters, random_state=10)
    cluster_labels = clusterer.fit_predict(x)

#The silhouette score gives the average value for all the samples.
#This gives a perspective into the density and separation of the formed clusters
    silhouette_avg = silhouette_score (x, cluster_labels) 
    print("For n_clusters = ",n_clusters, "The average silhouette score is : ", silhouette_avg,)

import scipy.cluster.hierarchy as sch
plt.figure(figsize=(10,10))
dendrogram = sch.dendrogram(sch.linkage(x, method = 'single'))
plt.title('Dendrogram')
plt.xlabel('Customers')
plt.ylabel("Euclidean distances")
plt.show()

from sklearn.cluster import AgglomerativeClustering

hc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'complete')
y_hc = hc.fit_predict(x)

# Visualising the clusters
plt.figure(figsize=(8,8))
plt.scatter(x[y_hc == 0,0],x[y_hc == 0,1],s=100,c='red',label = 'Careful Customers')
plt.scatter(x[y_hc == 1,0],x[y_hc == 1,1],s=100,c='blue',label = 'Standard Customers')
plt.scatter(x[y_hc == 2,0],x[y_hc == 2,1],s=100,c='green',label = 'Target Customers')
plt.scatter(x[y_hc == 3,0],x[y_hc == 3,1],s=100,c='magenta',label = 'Careless Customers')
plt.scatter(x[y_hc == 4,0],x[y_hc == 4,1],s=100,c='pink',label = 'Sensible Customers')

plt.title("Clusters of customers using Hierarchical Clustering")
plt.xlabel('Annual Income (K$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()